{"ast":null,"code":"import { createStore, applyMiddleware, bindActionCreators } from 'redux';\nimport thunk from 'redux-thunk';\nimport { decode } from '@mapbox/polyline';\nimport utils from './utils';\nimport rootReducer from './reducers';\nconst storeWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = storeWithMiddleware(rootReducer);\n\n// State object management via redux\nimport * as actions from './actions';\nimport directionsStyle from './directions_style';\n\n// Controls\nimport Inputs from './controls/inputs';\nimport Instructions from './controls/instructions';\n\n/**\n * The Directions control\n * @class MapboxDirections\n *\n * @param {Object} options\n * @param {Array} [options.styles] Override default layer properties of the [directions source](https://github.com/mapbox/mapbox-gl-directions/blob/master/src/directions_style.js). Documentation for each property are specified in the [Mapbox GL Style Reference](https://www.mapbox.com/mapbox-gl-style-spec/).\n * @param {String} [options.accessToken=null] Required unless `mapboxgl.accessToken` is set globally\n * @param {String} [options.api=\"https://api.mapbox.com/directions/v5/\"] Override default routing endpoint url\n * @param {Boolean} [options.interactive=true] Enable/Disable mouse or touch interactivity from the plugin\n * @param {String} [options.profile=\"mapbox/driving-traffic\"] Routing profile to use. Options: `mapbox/driving-traffic`, `mapbox/driving`, `mapbox/walking`, `mapbox/cycling`\n * @param {Boolean} [options.alternatives=false] Whether to enable alternatives.\n * @param {Boolean} [options.congestion=false] Whether to enable congestion along the route line.\n * @param {String} [options.unit=\"imperial\"] Measurement system to be used in navigation instructions. Options: `imperial`, `metric`\n * @param {Function} [options.compile=null] Provide a custom function for generating instruction, compatible with osrm-text-instructions.\n * @param {Object} [options.geocoder] Accepts an object containing the query parameters as [documented here](https://www.mapbox.com/api-documentation/#search-for-places).\n * @param {Object} [options.controls]\n * @param {Boolean} [options.controls.inputs=true] Hide or display the inputs control.\n * @param {Boolean} [options.controls.instructions=true] Hide or display the instructions control.\n * @param {Boolean} [options.controls.profileSwitcher=true] Hide or display the default profile switch with options for traffic, driving, walking and cycling.\n * @param {Number} [options.zoom=16] If no bbox exists from the geocoder result, the zoom you set here will be used in the flyTo.\n * @param {String} [options.language=\"en\"] The language of returned turn-by-turn text instructions. See supported languages : https://docs.mapbox.com/api/navigation/#instructions-languages\n * @param {String} [options.placeholderOrigin=\"Choose a starting place\"] If set, this text will appear as the placeholder attribute for the origin input element.\n * @param {String} [options.placeholderDestination=\"Choose destination\"] If set, this text will appear as the placeholder attribute for the destination input element.\n * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\n * @param {String} [options.exclude=null] Exclude certain road types from routing. The default is to not exclude anything. Search for `exclude` in `optional parameters`: https://docs.mapbox.com/api/navigation/#retrieve-directions\n * @example\n * var MapboxDirections = require('../src/index');\n * var directions = new MapboxDirections({\n *   accessToken: 'YOUR-MAPBOX-ACCESS-TOKEN',\n *   unit: 'metric',\n *   profile: 'mapbox/cycling'\n * });\n * // add to your mapboxgl map\n * map.addControl(directions);\n *\n * @return {MapboxDirections} `this`\n */\nexport default class MapboxDirections {\n  constructor(options) {\n    this.actions = bindActionCreators(actions, store.dispatch);\n    this.actions.setOptions(options || {});\n    this.options = options || {};\n    this.onDragDown = this._onDragDown.bind(this);\n    this.onDragMove = this._onDragMove.bind(this);\n    this.onDragUp = this._onDragUp.bind(this);\n    this.move = this._move.bind(this);\n    this.onClick = this._clickHandler().bind(this);\n  }\n  onAdd(map) {\n    this._map = map;\n    const {\n      controls\n    } = store.getState();\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-directions mapboxgl-ctrl';\n\n    // Add controls to the page\n    const inputEl = document.createElement('div');\n    inputEl.className = 'directions-control directions-control-inputs';\n    new Inputs(inputEl, store, this.actions, this._map);\n    const directionsEl = document.createElement('div');\n    directionsEl.className = 'directions-control directions-control-instructions';\n    new Instructions(directionsEl, store, {\n      hoverMarker: this.actions.hoverMarker,\n      setRouteIndex: this.actions.setRouteIndex\n    }, this._map);\n    if (controls.inputs) el.appendChild(inputEl);\n    if (controls.instructions) el.appendChild(directionsEl);\n    this.subscribedActions();\n    if (this._map.loaded()) this.mapState();else this._map.on('load', () => this.mapState());\n    return el;\n  }\n\n  /**\n   * Removes the control from the map it has been added to. This is called by `map.removeControl`,\n   * which is the recommended method to remove controls.\n   *\n   * @returns {Control} `this`\n   */\n  onRemove(map) {\n    this.container.parentNode.removeChild(this.container);\n    this.removeRoutes();\n    map.off('mousedown', this.onDragDown);\n    map.off('mousemove', this.move);\n    map.off('touchstart', this.onDragDown);\n    map.off('touchstart', this.move);\n    map.off('click', this.onClick);\n    if (this.storeUnsubscribe) {\n      this.storeUnsubscribe();\n      delete this.storeUnsubscribe;\n    }\n    directionsStyle.forEach(layer => {\n      if (map.getLayer(layer.id)) map.removeLayer(layer.id);\n    });\n    if (map.getSource('directions')) map.removeSource('directions');\n    this._map = null;\n    return this;\n  }\n  mapState() {\n    const {\n      profile,\n      alternatives,\n      congestion,\n      styles,\n      interactive,\n      compile\n    } = store.getState();\n\n    // Emit any default or option set config\n    this.actions.eventEmit('profile', {\n      profile\n    });\n    const geojson = {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: []\n      }\n    };\n\n    // Add and set data theme layer/style\n    this._map.addSource('directions', geojson);\n\n    // Add direction specific styles to the map\n    if (styles && styles.length) styles.forEach(style => this._map.addLayer(style));\n    directionsStyle.forEach(style => {\n      // only add the default style layer if a custom layer wasn't provided\n      if (!this._map.getLayer(style.id)) this._map.addLayer(style);\n    });\n    if (interactive) {\n      this._map.on('mousedown', this.onDragDown);\n      this._map.on('mousemove', this.move);\n      this._map.on('click', this.onClick);\n      this._map.on('touchstart', this.move);\n      this._map.on('touchstart', this.onDragDown);\n    }\n  }\n  subscribedActions() {\n    this.storeUnsubscribe = store.subscribe(() => {\n      const {\n        origin,\n        destination,\n        hoverMarker,\n        directions,\n        routeIndex\n      } = store.getState();\n      const geojson = {\n        type: 'FeatureCollection',\n        features: [origin, destination, hoverMarker].filter(d => {\n          return d.geometry;\n        })\n      };\n      if (directions.length) {\n        directions.forEach((feature, index) => {\n          const features = [];\n          const decoded = decode(feature.geometry, 5).map(function (c) {\n            return c.reverse();\n          });\n          decoded.forEach(function (c, i) {\n            var previous = features[features.length - 1];\n            var congestion = feature.legs[0].annotation && feature.legs[0].annotation.congestion && feature.legs[0].annotation.congestion[i - 1];\n            if (previous && (!congestion || previous.properties.congestion === congestion)) {\n              previous.geometry.coordinates.push(c);\n            } else {\n              var segment = {\n                geometry: {\n                  type: 'LineString',\n                  coordinates: []\n                },\n                properties: {\n                  'route-index': index,\n                  route: index === routeIndex ? 'selected' : 'alternate'\n                }\n              };\n\n              // New segment starts with previous segment's last coordinate.\n              if (previous) segment.geometry.coordinates.push(previous.geometry.coordinates[previous.geometry.coordinates.length - 1]);\n              segment.geometry.coordinates.push(c);\n              if (congestion) {\n                segment.properties.congestion = feature.legs[0].annotation.congestion[i - 1];\n              }\n              features.push(segment);\n            }\n          });\n          geojson.features = geojson.features.concat(features);\n          if (index === routeIndex) {\n            // Collect any possible waypoints from steps\n            feature.legs[0].steps.forEach(d => {\n              if (d.maneuver.type === 'waypoint') {\n                geojson.features.push({\n                  type: 'Feature',\n                  geometry: d.maneuver.location,\n                  properties: {\n                    id: 'waypoint'\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n      if (this._map.style && this._map.getSource('directions')) {\n        this._map.getSource('directions').setData(geojson);\n      }\n    });\n  }\n  _clickHandler() {\n    var timer = null;\n    var delay = 250;\n    return function (event) {\n      if (!timer) {\n        var singleClickHandler = this._onSingleClick.bind(this);\n        timer = setTimeout(function () {\n          singleClickHandler(event);\n          timer = null;\n        }, delay);\n      } else {\n        clearTimeout(timer);\n        timer = null;\n        this._map.zoomIn();\n      }\n    };\n  }\n  _onSingleClick(e) {\n    const {\n      origin\n    } = store.getState();\n    const coords = [e.lngLat.lng, e.lngLat.lat];\n    if (!origin.geometry) {\n      this.actions.setOriginFromCoordinates(coords);\n    } else {\n      const features = this._map.queryRenderedFeatures(e.point, {\n        layers: ['directions-origin-point', 'directions-destination-point', 'directions-waypoint-point', 'directions-route-line-alt']\n      });\n      if (features.length) {\n        // Remove any waypoints\n        features.forEach(f => {\n          if (f.layer.id === 'directions-waypoint-point') {\n            this.actions.removeWaypoint(f);\n          }\n        });\n        if (features[0].properties.route === 'alternate') {\n          const index = features[0].properties['route-index'];\n          this.actions.setRouteIndex(index);\n        }\n      } else {\n        this.actions.setDestinationFromCoordinates(coords);\n        this._map.flyTo({\n          center: coords\n        });\n      }\n    }\n  }\n  _move(e) {\n    const {\n      hoverMarker\n    } = store.getState();\n    const features = this._map.queryRenderedFeatures(e.point, {\n      layers: ['directions-route-line-alt', 'directions-route-line', 'directions-origin-point', 'directions-destination-point', 'directions-hover-point']\n    });\n    this._map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n    if (features.length) {\n      this.isCursorOverPoint = features[0];\n      this._map.dragPan.disable();\n\n      // Add a possible waypoint marker when hovering over the active route line\n      features.forEach(feature => {\n        if (feature.layer.id === 'directions-route-line') {\n          this.actions.hoverMarker([e.lngLat.lng, e.lngLat.lat]);\n        } else if (hoverMarker.geometry) {\n          this.actions.hoverMarker(null);\n        }\n      });\n    } else if (this.isCursorOverPoint) {\n      this.isCursorOverPoint = false;\n      this._map.dragPan.enable();\n    }\n  }\n  _onDragDown() {\n    if (!this.isCursorOverPoint) return;\n    this.isDragging = this.isCursorOverPoint;\n    this._map.getCanvas().style.cursor = 'grab';\n    this._map.on('mousemove', this.onDragMove);\n    this._map.on('mouseup', this.onDragUp);\n    this._map.on('touchmove', this.onDragMove);\n    this._map.on('touchend', this.onDragUp);\n  }\n  _onDragMove(e) {\n    if (!this.isDragging) return;\n    const coords = [e.lngLat.lng, e.lngLat.lat];\n    switch (this.isDragging.layer.id) {\n      case 'directions-origin-point':\n        this.actions.createOrigin(coords);\n        break;\n      case 'directions-destination-point':\n        this.actions.createDestination(coords);\n        break;\n      case 'directions-hover-point':\n        this.actions.hoverMarker(coords);\n        break;\n    }\n  }\n  _onDragUp() {\n    if (!this.isDragging) return;\n    const {\n      hoverMarker,\n      origin,\n      destination\n    } = store.getState();\n    switch (this.isDragging.layer.id) {\n      case 'directions-origin-point':\n        this.actions.setOriginFromCoordinates(origin.geometry.coordinates);\n        break;\n      case 'directions-destination-point':\n        this.actions.setDestinationFromCoordinates(destination.geometry.coordinates);\n        break;\n      case 'directions-hover-point':\n        // Add waypoint if a sufficent amount of dragging has occurred.\n        if (hoverMarker.geometry && !utils.coordinateMatch(this.isDragging, hoverMarker)) {\n          this.actions.addWaypoint(0, hoverMarker);\n        }\n        break;\n    }\n    this.isDragging = false;\n    this._map.getCanvas().style.cursor = '';\n    this._map.off('touchmove', this.onDragMove);\n    this._map.off('touchend', this.onDragUp);\n    this._map.off('mousemove', this.onDragMove);\n    this._map.off('mouseup', this.onDragUp);\n  }\n\n  // API Methods\n  // ============================\n\n  /**\n   * Turn on or off interactivity\n   * @param {Boolean} state sets interactivity based on a state of `true` or `false`.\n   * @returns {MapboxDirections} this\n   */\n  interactive(state) {\n    if (state) {\n      this._map.on('touchstart', this.move);\n      this._map.on('touchstart', this.onDragDown);\n      this._map.on('mousedown', this.onDragDown);\n      this._map.on('mousemove', this.move);\n      this._map.on('click', this.onClick);\n    } else {\n      this._map.off('touchstart', this.move);\n      this._map.off('touchstart', this.onDragDown);\n      this._map.off('mousedown', this.onDragDown);\n      this._map.off('mousemove', this.move);\n      this._map.off('click', this.onClick);\n    }\n    return this;\n  }\n\n  /**\n   * Returns the origin of the current route.\n   * @returns {Object} origin\n   */\n  getOrigin() {\n    return store.getState().origin;\n  }\n\n  /**\n   * Sets origin. _Note:_ calling this method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n   * to have run.\n   * @param {Array<number>|String} query An array of coordinates [lng, lat] or location name as a string.\n   * @returns {MapboxDirections} this\n   */\n  setOrigin(query) {\n    if (typeof query === 'string') {\n      this.actions.queryOrigin(query);\n    } else {\n      this.actions.setOriginFromCoordinates(query);\n    }\n    return this;\n  }\n\n  /**\n   * Returns the destination of the current route.\n   * @returns {Object} destination\n   */\n  getDestination() {\n    return store.getState().destination;\n  }\n\n  /**\n   * Sets destination. _Note:_ calling this method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n   * to have run.\n   * @param {Array<number>|String} query An array of coordinates [lng, lat] or location name as a string.\n   * @returns {MapboxDirections} this\n   */\n  setDestination(query) {\n    if (typeof query === 'string') {\n      this.actions.queryDestination(query);\n    } else {\n      this.actions.setDestinationFromCoordinates(query);\n    }\n    return this;\n  }\n\n  /**\n   * Swap the origin and destination.\n   * @returns {MapboxDirections} this\n   */\n  reverse() {\n    this.actions.reverse();\n    return this;\n  }\n\n  /**\n   * Add a waypoint to the route. _Note:_ calling this method requires the\n   * [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load) to have run.\n   * @param {Number} index position waypoint should be placed in the waypoint array\n   * @param {Array<number>|Point} waypoint can be a GeoJSON Point Feature or [lng, lat] coordinates.\n   * @returns {MapboxDirections} this;\n   */\n  addWaypoint(index, waypoint) {\n    if (!waypoint.type) waypoint = utils.createPoint(waypoint, {\n      id: 'waypoint'\n    });\n    this.actions.addWaypoint(index, waypoint);\n    return this;\n  }\n\n  /**\n   * Change the waypoint at a given index in the route. _Note:_ calling this\n   * method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n   * to have run.\n   * @param {Number} index indexed position of the waypoint to update\n   * @param {Array<number>|Point} waypoint can be a GeoJSON Point Feature or [lng, lat] coordinates.\n   * @returns {MapboxDirections} this;\n   */\n  setWaypoint(index, waypoint) {\n    if (!waypoint.type) waypoint = utils.createPoint(waypoint, {\n      id: 'waypoint'\n    });\n    this.actions.setWaypoint(index, waypoint);\n    return this;\n  }\n\n  /**\n   * Remove a waypoint from the route.\n   * @param {Number} index position in the waypoints array.\n   * @returns {MapboxDirections} this;\n   */\n  removeWaypoint(index) {\n    const {\n      waypoints\n    } = store.getState();\n    this.actions.removeWaypoint(waypoints[index]);\n    return this;\n  }\n\n  /**\n   * Fetch all current waypoints in a route.\n   * @returns {Array} waypoints\n   */\n  getWaypoints() {\n    return store.getState().waypoints;\n  }\n\n  /**\n   * Removes all routes and waypoints from the map.\n   *\n   * @returns {MapboxDirections} this;\n   */\n  removeRoutes() {\n    this.actions.clearOrigin();\n    this.actions.clearDestination();\n    return this;\n  }\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `{ type: } Type is one of 'origin' or 'destination'`\n   * - __loading__ `{ type: } Type is one of 'origin' or 'destination'`\n   * - __profile__ `{ profile } Profile is one of 'driving', 'walking', or 'cycling'`\n   * - __origin__ `{ feature } Fired when origin is set`\n   * - __destination__ `{ feature } Fired when destination is set`\n   * - __route__ `{ route } Fired when a route is updated`\n   * - __error__ `{ error } Error as string\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxDirections} this;\n   */\n  on(type, fn) {\n    this.actions.eventSubscribe(type, fn);\n    return this;\n  }\n}","map":{"version":3,"names":["createStore","applyMiddleware","bindActionCreators","thunk","decode","utils","rootReducer","storeWithMiddleware","store","actions","directionsStyle","Inputs","Instructions","MapboxDirections","constructor","options","dispatch","setOptions","onDragDown","_onDragDown","bind","onDragMove","_onDragMove","onDragUp","_onDragUp","move","_move","onClick","_clickHandler","onAdd","map","_map","controls","getState","el","container","document","createElement","className","inputEl","directionsEl","hoverMarker","setRouteIndex","inputs","appendChild","instructions","subscribedActions","loaded","mapState","on","onRemove","parentNode","removeChild","removeRoutes","off","storeUnsubscribe","forEach","layer","getLayer","id","removeLayer","getSource","removeSource","profile","alternatives","congestion","styles","interactive","compile","eventEmit","geojson","type","data","features","addSource","length","style","addLayer","subscribe","origin","destination","directions","routeIndex","filter","d","geometry","feature","index","decoded","c","reverse","i","previous","legs","annotation","properties","coordinates","push","segment","route","concat","steps","maneuver","location","setData","timer","delay","event","singleClickHandler","_onSingleClick","setTimeout","clearTimeout","zoomIn","e","coords","lngLat","lng","lat","setOriginFromCoordinates","queryRenderedFeatures","point","layers","f","removeWaypoint","setDestinationFromCoordinates","flyTo","center","getCanvas","cursor","isCursorOverPoint","dragPan","disable","enable","isDragging","createOrigin","createDestination","coordinateMatch","addWaypoint","state","getOrigin","setOrigin","query","queryOrigin","getDestination","setDestination","queryDestination","waypoint","createPoint","setWaypoint","waypoints","getWaypoints","clearOrigin","clearDestination","fn","eventSubscribe"],"sources":["/Users/bhavyatanwar/Desktop/ev-charging/node_modules/mapbox-gl-direction-location/src/directions.js"],"sourcesContent":["import { createStore, applyMiddleware, bindActionCreators } from 'redux';\nimport thunk from 'redux-thunk';\nimport { decode } from '@mapbox/polyline';\nimport utils from './utils';\nimport rootReducer from './reducers';\n\nconst storeWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = storeWithMiddleware(rootReducer);\n\n// State object management via redux\nimport * as actions from './actions';\nimport directionsStyle from './directions_style';\n\n// Controls\nimport Inputs from './controls/inputs';\nimport Instructions from './controls/instructions';\n\n/**\n * The Directions control\n * @class MapboxDirections\n *\n * @param {Object} options\n * @param {Array} [options.styles] Override default layer properties of the [directions source](https://github.com/mapbox/mapbox-gl-directions/blob/master/src/directions_style.js). Documentation for each property are specified in the [Mapbox GL Style Reference](https://www.mapbox.com/mapbox-gl-style-spec/).\n * @param {String} [options.accessToken=null] Required unless `mapboxgl.accessToken` is set globally\n * @param {String} [options.api=\"https://api.mapbox.com/directions/v5/\"] Override default routing endpoint url\n * @param {Boolean} [options.interactive=true] Enable/Disable mouse or touch interactivity from the plugin\n * @param {String} [options.profile=\"mapbox/driving-traffic\"] Routing profile to use. Options: `mapbox/driving-traffic`, `mapbox/driving`, `mapbox/walking`, `mapbox/cycling`\n * @param {Boolean} [options.alternatives=false] Whether to enable alternatives.\n * @param {Boolean} [options.congestion=false] Whether to enable congestion along the route line.\n * @param {String} [options.unit=\"imperial\"] Measurement system to be used in navigation instructions. Options: `imperial`, `metric`\n * @param {Function} [options.compile=null] Provide a custom function for generating instruction, compatible with osrm-text-instructions.\n * @param {Object} [options.geocoder] Accepts an object containing the query parameters as [documented here](https://www.mapbox.com/api-documentation/#search-for-places).\n * @param {Object} [options.controls]\n * @param {Boolean} [options.controls.inputs=true] Hide or display the inputs control.\n * @param {Boolean} [options.controls.instructions=true] Hide or display the instructions control.\n * @param {Boolean} [options.controls.profileSwitcher=true] Hide or display the default profile switch with options for traffic, driving, walking and cycling.\n * @param {Number} [options.zoom=16] If no bbox exists from the geocoder result, the zoom you set here will be used in the flyTo.\n * @param {String} [options.language=\"en\"] The language of returned turn-by-turn text instructions. See supported languages : https://docs.mapbox.com/api/navigation/#instructions-languages\n * @param {String} [options.placeholderOrigin=\"Choose a starting place\"] If set, this text will appear as the placeholder attribute for the origin input element.\n * @param {String} [options.placeholderDestination=\"Choose destination\"] If set, this text will appear as the placeholder attribute for the destination input element.\n * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\n * @param {String} [options.exclude=null] Exclude certain road types from routing. The default is to not exclude anything. Search for `exclude` in `optional parameters`: https://docs.mapbox.com/api/navigation/#retrieve-directions\n * @example\n * var MapboxDirections = require('../src/index');\n * var directions = new MapboxDirections({\n *   accessToken: 'YOUR-MAPBOX-ACCESS-TOKEN',\n *   unit: 'metric',\n *   profile: 'mapbox/cycling'\n * });\n * // add to your mapboxgl map\n * map.addControl(directions);\n *\n * @return {MapboxDirections} `this`\n */\nexport default class MapboxDirections {\n\n  constructor(options) {\n    this.actions = bindActionCreators(actions, store.dispatch);\n    this.actions.setOptions(options || {});\n    this.options = options || {};\n\n    this.onDragDown = this._onDragDown.bind(this);\n    this.onDragMove = this._onDragMove.bind(this);\n    this.onDragUp = this._onDragUp.bind(this);\n    this.move = this._move.bind(this);\n    this.onClick = this._clickHandler().bind(this);\n  }\n\n  onAdd(map) {\n    this._map = map;\n\n    const { controls } = store.getState();\n\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-directions mapboxgl-ctrl';\n\n    // Add controls to the page\n    const inputEl = document.createElement('div');\n    inputEl.className = 'directions-control directions-control-inputs';\n    new Inputs(inputEl, store, this.actions, this._map);\n\n    const directionsEl = document.createElement('div');\n    directionsEl.className = 'directions-control directions-control-instructions';\n\n    new Instructions(directionsEl, store, {\n      hoverMarker: this.actions.hoverMarker,\n      setRouteIndex: this.actions.setRouteIndex\n    }, this._map);\n\n    if (controls.inputs) el.appendChild(inputEl);\n    if (controls.instructions) el.appendChild(directionsEl);\n\n    this.subscribedActions();\n    if (this._map.loaded()) this.mapState()\n    else this._map.on('load', () => this.mapState());\n\n    return el;\n  }\n\n  /**\n   * Removes the control from the map it has been added to. This is called by `map.removeControl`,\n   * which is the recommended method to remove controls.\n   *\n   * @returns {Control} `this`\n   */\n  onRemove(map) {\n    this.container.parentNode.removeChild(this.container);\n    this.removeRoutes();\n    map.off('mousedown', this.onDragDown);\n    map.off('mousemove', this.move);\n    map.off('touchstart', this.onDragDown);\n    map.off('touchstart', this.move);\n    map.off('click', this.onClick);\n    if (this.storeUnsubscribe) {\n      this.storeUnsubscribe();\n      delete this.storeUnsubscribe;\n    }\n    directionsStyle.forEach((layer) => {\n      if (map.getLayer(layer.id)) map.removeLayer(layer.id);\n    });\n\n    if (map.getSource('directions')) map.removeSource('directions');\n\n    this._map = null;\n    return this;\n  }\n\n  mapState() {\n    const { profile, alternatives, congestion, styles, interactive, compile } = store.getState();\n\n    // Emit any default or option set config\n    this.actions.eventEmit('profile', { profile });\n\n    const geojson = {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: []\n      }\n    };\n\n    // Add and set data theme layer/style\n    this._map.addSource('directions', geojson);\n\n    // Add direction specific styles to the map\n    if (styles && styles.length) styles.forEach((style) => this._map.addLayer(style));\n    directionsStyle.forEach((style) => {\n      // only add the default style layer if a custom layer wasn't provided\n      if (!this._map.getLayer(style.id)) this._map.addLayer(style);\n    });\n\n\n    if (interactive) {\n      this._map.on('mousedown', this.onDragDown);\n      this._map.on('mousemove', this.move);\n      this._map.on('click', this.onClick);\n\n      this._map.on('touchstart', this.move);\n      this._map.on('touchstart', this.onDragDown);\n    }\n  }\n\n  subscribedActions() {\n    this.storeUnsubscribe = store.subscribe(() => {\n      const {\n        origin,\n        destination,\n        hoverMarker,\n        directions,\n        routeIndex\n      } = store.getState();\n\n      const geojson = {\n        type: 'FeatureCollection',\n        features: [\n          origin,\n          destination,\n          hoverMarker\n        ].filter((d) => {\n          return d.geometry;\n        })\n      };\n\n      if (directions.length) {\n        directions.forEach((feature, index) => {\n\n          const features = [];\n\n          const decoded = decode(feature.geometry, 5).map(function(c) {\n            return c.reverse();\n          });\n\n          decoded.forEach(function(c, i) {\n            var previous = features[features.length - 1];\n            var congestion = feature.legs[0].annotation && feature.legs[0].annotation.congestion && feature.legs[0].annotation.congestion[i - 1];\n\n            if (previous && (!congestion || previous.properties.congestion === congestion)) {\n              previous.geometry.coordinates.push(c);\n            } else {\n              var segment = {\n                geometry: {\n                  type: 'LineString',\n                  coordinates: []\n                },\n                properties: {\n                  'route-index': index,\n                  route: (index === routeIndex) ? 'selected' : 'alternate',\n                }\n              };\n\n              // New segment starts with previous segment's last coordinate.\n              if (previous) segment.geometry.coordinates.push(previous.geometry.coordinates[previous.geometry.coordinates.length - 1]);\n\n              segment.geometry.coordinates.push(c);\n\n              if (congestion) {\n                segment.properties.congestion = feature.legs[0].annotation.congestion[i - 1];\n              }\n\n              features.push(segment);\n            }\n          });\n\n          geojson.features = geojson.features.concat(features);\n\n          if (index === routeIndex) {\n            // Collect any possible waypoints from steps\n            feature.legs[0].steps.forEach((d) => {\n              if (d.maneuver.type === 'waypoint') {\n                geojson.features.push({\n                  type: 'Feature',\n                  geometry: d.maneuver.location,\n                  properties: {\n                    id: 'waypoint'\n                  }\n                });\n              }\n            });\n          }\n\n        });\n      }\n\n      if (this._map.style && this._map.getSource('directions')) {\n        this._map.getSource('directions').setData(geojson);\n      }\n    });\n  }\n\n  _clickHandler() {\n    var timer = null;\n    var delay = 250;\n    return function(event) {\n      if (!timer) {\n        var singleClickHandler = this._onSingleClick.bind(this);\n\n        timer = setTimeout(function() {\n          singleClickHandler(event);\n          timer = null;\n        }, delay);\n\n      } else {\n        clearTimeout(timer);\n        timer = null;\n        this._map.zoomIn();\n      }\n    };\n  }\n\n  _onSingleClick(e) {\n    const { origin } = store.getState();\n    const coords = [e.lngLat.lng, e.lngLat.lat];\n\n    if (!origin.geometry) {\n      this.actions.setOriginFromCoordinates(coords);\n    } else {\n\n      const features = this._map.queryRenderedFeatures(e.point, {\n        layers: [\n          'directions-origin-point',\n          'directions-destination-point',\n          'directions-waypoint-point',\n          'directions-route-line-alt'\n        ]\n      });\n\n      if (features.length) {\n\n        // Remove any waypoints\n        features.forEach((f) => {\n          if (f.layer.id === 'directions-waypoint-point') {\n            this.actions.removeWaypoint(f);\n          }\n        });\n\n        if (features[0].properties.route === 'alternate') {\n          const index = features[0].properties['route-index'];\n          this.actions.setRouteIndex(index);\n        }\n      } else {\n        this.actions.setDestinationFromCoordinates(coords);\n        this._map.flyTo({ center: coords });\n      }\n    }\n  }\n\n  _move(e) {\n    const { hoverMarker } = store.getState();\n\n    const features = this._map.queryRenderedFeatures(e.point, {\n      layers: [\n        'directions-route-line-alt',\n        'directions-route-line',\n        'directions-origin-point',\n        'directions-destination-point',\n        'directions-hover-point'\n      ]\n    });\n\n    this._map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n\n    if (features.length) {\n      this.isCursorOverPoint = features[0];\n      this._map.dragPan.disable();\n\n      // Add a possible waypoint marker when hovering over the active route line\n      features.forEach((feature) => {\n        if (feature.layer.id === 'directions-route-line') {\n          this.actions.hoverMarker([e.lngLat.lng, e.lngLat.lat]);\n        } else if (hoverMarker.geometry) {\n          this.actions.hoverMarker(null);\n        }\n      });\n\n    } else if (this.isCursorOverPoint) {\n      this.isCursorOverPoint = false;\n      this._map.dragPan.enable();\n    }\n  }\n\n  _onDragDown() {\n    if (!this.isCursorOverPoint) return;\n    this.isDragging = this.isCursorOverPoint;\n    this._map.getCanvas().style.cursor = 'grab';\n\n    this._map.on('mousemove', this.onDragMove);\n    this._map.on('mouseup', this.onDragUp);\n\n    this._map.on('touchmove', this.onDragMove);\n    this._map.on('touchend', this.onDragUp);\n  }\n\n  _onDragMove(e) {\n    if (!this.isDragging) return;\n\n    const coords = [e.lngLat.lng, e.lngLat.lat];\n    switch (this.isDragging.layer.id) {\n      case 'directions-origin-point':\n        this.actions.createOrigin(coords);\n      break;\n      case 'directions-destination-point':\n        this.actions.createDestination(coords);\n      break;\n      case 'directions-hover-point':\n        this.actions.hoverMarker(coords);\n      break;\n    }\n  }\n\n  _onDragUp() {\n    if (!this.isDragging) return;\n\n    const { hoverMarker, origin, destination } = store.getState();\n\n    switch (this.isDragging.layer.id) {\n      case 'directions-origin-point':\n        this.actions.setOriginFromCoordinates(origin.geometry.coordinates);\n      break;\n      case 'directions-destination-point':\n        this.actions.setDestinationFromCoordinates(destination.geometry.coordinates);\n      break;\n      case 'directions-hover-point':\n        // Add waypoint if a sufficent amount of dragging has occurred.\n        if (hoverMarker.geometry && !utils.coordinateMatch(this.isDragging, hoverMarker)) {\n          this.actions.addWaypoint(0, hoverMarker);\n        }\n      break;\n    }\n\n    this.isDragging = false;\n    this._map.getCanvas().style.cursor = '';\n\n    this._map.off('touchmove', this.onDragMove);\n    this._map.off('touchend', this.onDragUp);\n\n    this._map.off('mousemove', this.onDragMove);\n    this._map.off('mouseup', this.onDragUp);\n  }\n\n  // API Methods\n  // ============================\n\n  /**\n   * Turn on or off interactivity\n   * @param {Boolean} state sets interactivity based on a state of `true` or `false`.\n   * @returns {MapboxDirections} this\n   */\n  interactive(state) {\n    if (state) {\n      this._map.on('touchstart', this.move);\n      this._map.on('touchstart', this.onDragDown);\n\n      this._map.on('mousedown', this.onDragDown);\n      this._map.on('mousemove', this.move);\n      this._map.on('click', this.onClick);\n    } else {\n      this._map.off('touchstart', this.move);\n      this._map.off('touchstart', this.onDragDown);\n\n      this._map.off('mousedown', this.onDragDown);\n      this._map.off('mousemove', this.move);\n      this._map.off('click', this.onClick);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the origin of the current route.\n   * @returns {Object} origin\n   */\n  getOrigin() {\n    return store.getState().origin;\n  }\n\n  /**\n   * Sets origin. _Note:_ calling this method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n   * to have run.\n   * @param {Array<number>|String} query An array of coordinates [lng, lat] or location name as a string.\n   * @returns {MapboxDirections} this\n   */\n  setOrigin(query) {\n    if (typeof query === 'string') {\n      this.actions.queryOrigin(query);\n    } else {\n      this.actions.setOriginFromCoordinates(query);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the destination of the current route.\n   * @returns {Object} destination\n   */\n  getDestination() {\n    return store.getState().destination;\n  }\n\n  /**\n   * Sets destination. _Note:_ calling this method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n   * to have run.\n   * @param {Array<number>|String} query An array of coordinates [lng, lat] or location name as a string.\n   * @returns {MapboxDirections} this\n   */\n  setDestination(query) {\n    if (typeof query === 'string') {\n      this.actions.queryDestination(query);\n    } else {\n      this.actions.setDestinationFromCoordinates(query);\n    }\n\n    return this;\n  }\n\n  /**\n   * Swap the origin and destination.\n   * @returns {MapboxDirections} this\n   */\n  reverse() {\n    this.actions.reverse();\n    return this;\n  }\n\n  /**\n   * Add a waypoint to the route. _Note:_ calling this method requires the\n   * [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load) to have run.\n   * @param {Number} index position waypoint should be placed in the waypoint array\n   * @param {Array<number>|Point} waypoint can be a GeoJSON Point Feature or [lng, lat] coordinates.\n   * @returns {MapboxDirections} this;\n   */\n  addWaypoint(index, waypoint) {\n    if (!waypoint.type) waypoint = utils.createPoint(waypoint, { id: 'waypoint' });\n    this.actions.addWaypoint(index, waypoint);\n    return this;\n  }\n\n  /**\n   * Change the waypoint at a given index in the route. _Note:_ calling this\n   * method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n   * to have run.\n   * @param {Number} index indexed position of the waypoint to update\n   * @param {Array<number>|Point} waypoint can be a GeoJSON Point Feature or [lng, lat] coordinates.\n   * @returns {MapboxDirections} this;\n   */\n  setWaypoint(index, waypoint) {\n    if (!waypoint.type) waypoint = utils.createPoint(waypoint, { id: 'waypoint' });\n    this.actions.setWaypoint(index, waypoint);\n    return this;\n  }\n\n  /**\n   * Remove a waypoint from the route.\n   * @param {Number} index position in the waypoints array.\n   * @returns {MapboxDirections} this;\n   */\n  removeWaypoint(index) {\n    const { waypoints } = store.getState();\n    this.actions.removeWaypoint(waypoints[index]);\n    return this;\n  }\n\n  /**\n   * Fetch all current waypoints in a route.\n   * @returns {Array} waypoints\n   */\n  getWaypoints() {\n    return store.getState().waypoints;\n  }\n\n  /**\n   * Removes all routes and waypoints from the map.\n   *\n   * @returns {MapboxDirections} this;\n   */\n  removeRoutes() {\n    this.actions.clearOrigin();\n    this.actions.clearDestination();\n    return this;\n  }\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `{ type: } Type is one of 'origin' or 'destination'`\n   * - __loading__ `{ type: } Type is one of 'origin' or 'destination'`\n   * - __profile__ `{ profile } Profile is one of 'driving', 'walking', or 'cycling'`\n   * - __origin__ `{ feature } Fired when origin is set`\n   * - __destination__ `{ feature } Fired when destination is set`\n   * - __route__ `{ route } Fired when a route is updated`\n   * - __error__ `{ error } Error as string\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxDirections} this;\n   */\n  on(type, fn) {\n    this.actions.eventSubscribe(type, fn);\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}